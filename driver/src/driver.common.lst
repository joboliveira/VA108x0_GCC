ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   3              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   4              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   5              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   6              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   7              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
   8              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
   9              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  10              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  11              		.file	"driver.common.c"
  12              	@ GNU C11 (GNU Tools for Arm Embedded Processors 7-2017-q4-major) version 7.2.1 20170904 (release) 
  13              	@	compiled by GNU C version 5.3.1 20160211, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.
  14              	
  15              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  16              	@ options passed:  -I . -I .\common\hdr -I .\driver\hdr -I .\utilities\hdr
  17              	@ -I .\inc -I .\driver\hdr -I .\hdr -imultilib thumb/v6-m
  18              	@ -iprefix c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\bin\../lib/gcc/arm-none-ea
  19              	@ -isysroot c:\program files (x86)\gnu tools arm embedded\7 2017-q4-major\bin\../arm-none-eabi
  20              	@ -D__USES_INITFINI__ -D RUN_FROM_FLASH=1 .\driver\src\driver.common.c
  21              	@ -mcpu=cortex-m0 -mthumb -auxbase-strip .\driver\src\driver.common.o
  22              	@ -gdwarf-2 -Os -Wall -Wstrict-prototypes -fomit-frame-pointer
  23              	@ -fverbose-asm
  24              	@ options enabled:  -faggressive-loop-optimizations -falign-jumps
  25              	@ -falign-labels -falign-loops -fauto-inc-dec -fbranch-count-reg
  26              	@ -fcaller-saves -fchkp-check-incomplete-type -fchkp-check-read
  27              	@ -fchkp-check-write -fchkp-instrument-calls -fchkp-narrow-bounds
  28              	@ -fchkp-optimize -fchkp-store-bounds -fchkp-use-static-bounds
  29              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcode-hoisting
  30              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  31              	@ -fcrossjumping -fcse-follow-jumps -fdefer-pop
  32              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  33              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-types
  34              	@ -fexpensive-optimizations -fforward-propagate -ffp-int-builtin-inexact
  35              	@ -ffunction-cse -fgcse -fgcse-lm -fgnu-runtime -fgnu-unique
  36              	@ -fguess-branch-probability -fhoist-adjacent-loads -fident -fif-conversion
  37              	@ -fif-conversion2 -findirect-inlining -finline -finline-atomics
  38              	@ -finline-functions -finline-functions-called-once
  39              	@ -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-icf
  40              	@ -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  41              	@ -fipa-reference -fipa-sra -fipa-vrp -fira-hoist-pressure
  42              	@ -fira-share-save-slots -fira-share-spill-slots
  43              	@ -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  44              	@ -fleading-underscore -flifetime-dse -flra-remat -flto-odr-type-merging
  45              	@ -fmath-errno -fmerge-constants -fmerge-debug-strings
  46              	@ -fmove-loop-invariants -fomit-frame-pointer -foptimize-sibling-calls
  47              	@ -fpartial-inlining -fpeephole -fpeephole2 -fplt -fprefetch-loop-arrays
  48              	@ -freg-struct-return -freorder-blocks -freorder-functions
  49              	@ -frerun-cse-after-loop -fsched-critical-path-heuristic
  50              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  51              	@ -fsched-last-insn-heuristic -fsched-pressure -fsched-rank-heuristic
  52              	@ -fsched-spec -fsched-spec-insn-heuristic -fsched-stalled-insns-dep
  53              	@ -fschedule-insns2 -fsection-anchors -fsemantic-interposition
  54              	@ -fshow-column -fshrink-wrap -fshrink-wrap-separate -fsigned-zeros
  55              	@ -fsplit-ivs-in-unroller -fsplit-wide-types -fssa-backprop -fssa-phiopt
  56              	@ -fstdarg-opt -fstore-merging -fstrict-aliasing -fstrict-overflow
  57              	@ -fstrict-volatile-bitfields -fsync-libcalls -fthread-jumps
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 2


  58              	@ -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
  59              	@ -ftree-ccp -ftree-ch -ftree-coalesce-vars -ftree-copy-prop -ftree-cselim
  60              	@ -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  61              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  62              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
  63              	@ -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr
  64              	@ -ftree-sra -ftree-switch-conversion -ftree-tail-merge -ftree-ter
  65              	@ -ftree-vrp -funit-at-a-time -fvar-tracking -fvar-tracking-assignments
  66              	@ -fverbose-asm -fzero-initialized-in-bss -mlittle-endian
  67              	@ -mpic-data-is-text-relative -msched-prolog -mthumb
  68              	@ -mvectorize-with-neon-quad
  69              	
  70              		.text
  71              	.Ltext0:
  72              		.cfi_sections	.debug_frame
  73              		.align	1
  74              		.global	VOR_Get_ClockFreq
  75              		.syntax unified
  76              		.code	16
  77              		.thumb_func
  78              		.fpu softvfp
  79              		.type	VOR_Get_ClockFreq, %function
  80              	VOR_Get_ClockFreq:
  81              	.LFB34:
  82              		.file 1 ".\\driver\\src\\driver.common.c"
   1:.\driver\src/driver.common.c **** /***************************************************************************************
   2:.\driver\src/driver.common.c ****  * @file     driver_common.c
   3:.\driver\src/driver.common.c ****  * @version  V1.0
   4:.\driver\src/driver.common.c ****  * @date     31. March 2016
   5:.\driver\src/driver.common.c ****  *
   6:.\driver\src/driver.common.c ****  * @note
   7:.\driver\src/driver.common.c ****  * VORAGO Technologies 
   8:.\driver\src/driver.common.c ****  *
   9:.\driver\src/driver.common.c ****  * @note
  10:.\driver\src/driver.common.c ****  * Copyright (c) 2013-2016 VORAGO Technologies. 
  11:.\driver\src/driver.common.c ****  *
  12:.\driver\src/driver.common.c ****  * @par
  13:.\driver\src/driver.common.c ****  * BY DOWNLOADING, INSTALLING OR USING THIS SOFTWARE, YOU AGREE TO BE BOUND BY 
  14:.\driver\src/driver.common.c ****  * ALL THE TERMS AND CONDITIONS OF THE VORAGO TECHNOLOGIES END USER LICENSE AGREEMENT. 
  15:.\driver\src/driver.common.c ****  * THIS SOFTWARE IS PROVIDED "AS IS". NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  16:.\driver\src/driver.common.c ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY 
  17:.\driver\src/driver.common.c ****  * AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. VORAGO TECHNOLOGIES 
  18:.\driver\src/driver.common.c ****  * SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR CONSEQUENTIAL 
  19:.\driver\src/driver.common.c ****  * DAMAGES, FOR ANY REASON WHATSOEVER.
  20:.\driver\src/driver.common.c ****  *
  21:.\driver\src/driver.common.c ****  ****************************************************************************************/
  22:.\driver\src/driver.common.c **** #include "driver_common.h"
  23:.\driver\src/driver.common.c **** #include "va108xx.h"
  24:.\driver\src/driver.common.c **** #include "reb_board.h"
  25:.\driver\src/driver.common.c **** 
  26:.\driver\src/driver.common.c **** uint32_t VOR_Get_ClockFreq(void) 
  27:.\driver\src/driver.common.c **** {
  83              		.loc 1 27 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 3


  88              	@ .\driver\src\driver.common.c:28: 	return SystemCoreClock;
  28:.\driver\src/driver.common.c **** 	return SystemCoreClock;
  89              		.loc 1 28 0
  90 0000 014B     		ldr	r3, .L2	@ tmp112,
  91              	@ .\driver\src\driver.common.c:29: }
  29:.\driver\src/driver.common.c **** }
  92              		.loc 1 29 0
  93              		@ sp needed	@
  94              	@ .\driver\src\driver.common.c:28: 	return SystemCoreClock;
  28:.\driver\src/driver.common.c **** 	return SystemCoreClock;
  95              		.loc 1 28 0
  96 0002 1868     		ldr	r0, [r3]	@ SystemCoreClock, SystemCoreClock
  97              	@ .\driver\src\driver.common.c:29: }
  98              		.loc 1 29 0
  99 0004 7047     		bx	lr
 100              	.L3:
 101 0006 C046     		.align	2
 102              	.L2:
 103 0008 00000000 		.word	SystemCoreClock
 104              		.cfi_endproc
 105              	.LFE34:
 106              		.size	VOR_Get_ClockFreq, .-VOR_Get_ClockFreq
 107              		.align	1
 108              		.global	VOR_Get_SysTime
 109              		.syntax unified
 110              		.code	16
 111              		.thumb_func
 112              		.fpu softvfp
 113              		.type	VOR_Get_SysTime, %function
 114              	VOR_Get_SysTime:
 115              	.LFB35:
  30:.\driver\src/driver.common.c **** 
  31:.\driver\src/driver.common.c **** uint32_t VOR_Get_SysTime(void) 
  32:.\driver\src/driver.common.c **** {
 116              		.loc 1 32 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121              	@ .\driver\src\driver.common.c:35: }
  33:.\driver\src/driver.common.c **** 	uint32_t ret;
  34:.\driver\src/driver.common.c ****   return ret;
  35:.\driver\src/driver.common.c **** }
 122              		.loc 1 35 0
 123 000c 0020     		movs	r0, #0	@ ret,
 124              		@ sp needed	@
 125 000e 7047     		bx	lr
 126              		.cfi_endproc
 127              	.LFE35:
 128              		.size	VOR_Get_SysTime, .-VOR_Get_SysTime
 129              		.global	__aeabi_uidiv
 130              		.align	1
 131              		.global	VOR_Sleep
 132              		.syntax unified
 133              		.code	16
 134              		.thumb_func
 135              		.fpu softvfp
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 4


 136              		.type	VOR_Sleep, %function
 137              	VOR_Sleep:
 138              	.LFB36:
  36:.\driver\src/driver.common.c **** 
  37:.\driver\src/driver.common.c **** void VOR_Sleep(uint32_t mtime) 
  38:.\driver\src/driver.common.c **** {
 139              		.loc 1 38 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              	.LVL0:
 144              	.LBB8:
 145              	.LBB9:
 146              	@ .\driver\src\driver.common.c:28: 	return SystemCoreClock;
  28:.\driver\src/driver.common.c **** }
 147              		.loc 1 28 0
 148 0010 074B     		ldr	r3, .L8	@ tmp115,
 149              	.LBE9:
 150              	.LBE8:
 151              	@ .\driver\src\driver.common.c:38: {
 152              		.loc 1 38 0
 153 0012 10B5     		push	{r4, lr}	@
 154              	.LCFI0:
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 4, -8
 157              		.cfi_offset 14, -4
 158              	@ .\driver\src\driver.common.c:39: 	uint32_t i, msec = (VOR_Get_ClockFreq()/6000)*mtime;
  39:.\driver\src/driver.common.c **** 	uint32_t i, msec = (VOR_Get_ClockFreq()/6000)*mtime;
 159              		.loc 1 39 0
 160 0014 0749     		ldr	r1, .L8+4	@,
 161              	@ .\driver\src\driver.common.c:38: {
  38:.\driver\src/driver.common.c **** 	uint32_t i, msec = (VOR_Get_ClockFreq()/6000)*mtime;
 162              		.loc 1 38 0
 163 0016 0400     		movs	r4, r0	@ mtime, mtime
 164              	@ .\driver\src\driver.common.c:39: 	uint32_t i, msec = (VOR_Get_ClockFreq()/6000)*mtime;
 165              		.loc 1 39 0
 166 0018 1868     		ldr	r0, [r3]	@ SystemCoreClock, SystemCoreClock
 167              	.LVL1:
 168 001a FFF7FEFF 		bl	__aeabi_uidiv	@
 169              	.LVL2:
 170              	@ .\driver\src\driver.common.c:40: 	for(i=0; i<msec; i++)
  40:.\driver\src/driver.common.c **** 	for(i=0; i<msec; i++)
 171              		.loc 1 40 0
 172 001e 0023     		movs	r3, #0	@ i,
 173              	@ .\driver\src\driver.common.c:39: 	uint32_t i, msec = (VOR_Get_ClockFreq()/6000)*mtime;
  39:.\driver\src/driver.common.c **** 	uint32_t i, msec = (VOR_Get_ClockFreq()/6000)*mtime;
 174              		.loc 1 39 0
 175 0020 4443     		muls	r4, r0	@ msec, tmp120
 176              	.LVL3:
 177              	.L6:
 178              	@ .\driver\src\driver.common.c:40: 	for(i=0; i<msec; i++)
 179              		.loc 1 40 0 discriminator 1
 180 0022 A342     		cmp	r3, r4	@ i, msec
 181 0024 00D1     		bne	.L7	@,
 182              	@ .\driver\src\driver.common.c:42: }
  41:.\driver\src/driver.common.c **** 		__NOP( ); 
  42:.\driver\src/driver.common.c **** }
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 5


 183              		.loc 1 42 0
 184              		@ sp needed	@
 185              	.LVL4:
 186 0026 10BD     		pop	{r4, pc}
 187              	.LVL5:
 188              	.L7:
 189              	.LBB10:
 190              	.LBB11:
 191              	@ .\inc/cmsis_gcc.h:375:   __ASM volatile ("nop");
 192              		.file 2 ".\\inc/cmsis_gcc.h"
   1:.\inc/cmsis_gcc.h **** /**************************************************************************//**
   2:.\inc/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:.\inc/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:.\inc/cmsis_gcc.h ****  * @version  V4.30
   5:.\inc/cmsis_gcc.h ****  * @date     20. October 2015
   6:.\inc/cmsis_gcc.h ****  ******************************************************************************/
   7:.\inc/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:.\inc/cmsis_gcc.h **** 
   9:.\inc/cmsis_gcc.h ****    All rights reserved.
  10:.\inc/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:.\inc/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:.\inc/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:.\inc/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:.\inc/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:.\inc/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:.\inc/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:.\inc/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:.\inc/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:.\inc/cmsis_gcc.h ****      specific prior written permission.
  20:.\inc/cmsis_gcc.h ****    *
  21:.\inc/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:.\inc/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:.\inc/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:.\inc/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:.\inc/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:.\inc/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:.\inc/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:.\inc/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:.\inc/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:.\inc/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:.\inc/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:.\inc/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:.\inc/cmsis_gcc.h **** 
  34:.\inc/cmsis_gcc.h **** 
  35:.\inc/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:.\inc/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:.\inc/cmsis_gcc.h **** 
  38:.\inc/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:.\inc/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:.\inc/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:.\inc/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:.\inc/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:.\inc/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:.\inc/cmsis_gcc.h **** #endif
  45:.\inc/cmsis_gcc.h **** 
  46:.\inc/cmsis_gcc.h **** 
  47:.\inc/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 6


  48:.\inc/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:.\inc/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:.\inc/cmsis_gcc.h ****   @{
  51:.\inc/cmsis_gcc.h ****  */
  52:.\inc/cmsis_gcc.h **** 
  53:.\inc/cmsis_gcc.h **** /**
  54:.\inc/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:.\inc/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:.\inc/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:.\inc/cmsis_gcc.h ****  */
  58:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:.\inc/cmsis_gcc.h **** {
  60:.\inc/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:.\inc/cmsis_gcc.h **** }
  62:.\inc/cmsis_gcc.h **** 
  63:.\inc/cmsis_gcc.h **** 
  64:.\inc/cmsis_gcc.h **** /**
  65:.\inc/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:.\inc/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:.\inc/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:.\inc/cmsis_gcc.h ****  */
  69:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:.\inc/cmsis_gcc.h **** {
  71:.\inc/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:.\inc/cmsis_gcc.h **** }
  73:.\inc/cmsis_gcc.h **** 
  74:.\inc/cmsis_gcc.h **** 
  75:.\inc/cmsis_gcc.h **** /**
  76:.\inc/cmsis_gcc.h ****   \brief   Get Control Register
  77:.\inc/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:.\inc/cmsis_gcc.h ****   \return               Control Register value
  79:.\inc/cmsis_gcc.h ****  */
  80:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:.\inc/cmsis_gcc.h **** {
  82:.\inc/cmsis_gcc.h ****   uint32_t result;
  83:.\inc/cmsis_gcc.h **** 
  84:.\inc/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:.\inc/cmsis_gcc.h ****   return(result);
  86:.\inc/cmsis_gcc.h **** }
  87:.\inc/cmsis_gcc.h **** 
  88:.\inc/cmsis_gcc.h **** 
  89:.\inc/cmsis_gcc.h **** /**
  90:.\inc/cmsis_gcc.h ****   \brief   Set Control Register
  91:.\inc/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:.\inc/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:.\inc/cmsis_gcc.h ****  */
  94:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:.\inc/cmsis_gcc.h **** {
  96:.\inc/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:.\inc/cmsis_gcc.h **** }
  98:.\inc/cmsis_gcc.h **** 
  99:.\inc/cmsis_gcc.h **** 
 100:.\inc/cmsis_gcc.h **** /**
 101:.\inc/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:.\inc/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:.\inc/cmsis_gcc.h ****   \return               IPSR Register value
 104:.\inc/cmsis_gcc.h ****  */
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 7


 105:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:.\inc/cmsis_gcc.h **** {
 107:.\inc/cmsis_gcc.h ****   uint32_t result;
 108:.\inc/cmsis_gcc.h **** 
 109:.\inc/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:.\inc/cmsis_gcc.h ****   return(result);
 111:.\inc/cmsis_gcc.h **** }
 112:.\inc/cmsis_gcc.h **** 
 113:.\inc/cmsis_gcc.h **** 
 114:.\inc/cmsis_gcc.h **** /**
 115:.\inc/cmsis_gcc.h ****   \brief   Get APSR Register
 116:.\inc/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:.\inc/cmsis_gcc.h ****   \return               APSR Register value
 118:.\inc/cmsis_gcc.h ****  */
 119:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:.\inc/cmsis_gcc.h **** {
 121:.\inc/cmsis_gcc.h ****   uint32_t result;
 122:.\inc/cmsis_gcc.h **** 
 123:.\inc/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:.\inc/cmsis_gcc.h ****   return(result);
 125:.\inc/cmsis_gcc.h **** }
 126:.\inc/cmsis_gcc.h **** 
 127:.\inc/cmsis_gcc.h **** 
 128:.\inc/cmsis_gcc.h **** /**
 129:.\inc/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:.\inc/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:.\inc/cmsis_gcc.h **** 
 132:.\inc/cmsis_gcc.h ****     \return               xPSR Register value
 133:.\inc/cmsis_gcc.h ****  */
 134:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:.\inc/cmsis_gcc.h **** {
 136:.\inc/cmsis_gcc.h ****   uint32_t result;
 137:.\inc/cmsis_gcc.h **** 
 138:.\inc/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:.\inc/cmsis_gcc.h ****   return(result);
 140:.\inc/cmsis_gcc.h **** }
 141:.\inc/cmsis_gcc.h **** 
 142:.\inc/cmsis_gcc.h **** 
 143:.\inc/cmsis_gcc.h **** /**
 144:.\inc/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:.\inc/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:.\inc/cmsis_gcc.h ****   \return               PSP Register value
 147:.\inc/cmsis_gcc.h ****  */
 148:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:.\inc/cmsis_gcc.h **** {
 150:.\inc/cmsis_gcc.h ****   register uint32_t result;
 151:.\inc/cmsis_gcc.h **** 
 152:.\inc/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:.\inc/cmsis_gcc.h ****   return(result);
 154:.\inc/cmsis_gcc.h **** }
 155:.\inc/cmsis_gcc.h **** 
 156:.\inc/cmsis_gcc.h **** 
 157:.\inc/cmsis_gcc.h **** /**
 158:.\inc/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:.\inc/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:.\inc/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:.\inc/cmsis_gcc.h ****  */
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 8


 162:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:.\inc/cmsis_gcc.h **** {
 164:.\inc/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:.\inc/cmsis_gcc.h **** }
 166:.\inc/cmsis_gcc.h **** 
 167:.\inc/cmsis_gcc.h **** 
 168:.\inc/cmsis_gcc.h **** /**
 169:.\inc/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:.\inc/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:.\inc/cmsis_gcc.h ****   \return               MSP Register value
 172:.\inc/cmsis_gcc.h ****  */
 173:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:.\inc/cmsis_gcc.h **** {
 175:.\inc/cmsis_gcc.h ****   register uint32_t result;
 176:.\inc/cmsis_gcc.h **** 
 177:.\inc/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:.\inc/cmsis_gcc.h ****   return(result);
 179:.\inc/cmsis_gcc.h **** }
 180:.\inc/cmsis_gcc.h **** 
 181:.\inc/cmsis_gcc.h **** 
 182:.\inc/cmsis_gcc.h **** /**
 183:.\inc/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:.\inc/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:.\inc/cmsis_gcc.h **** 
 186:.\inc/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:.\inc/cmsis_gcc.h ****  */
 188:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:.\inc/cmsis_gcc.h **** {
 190:.\inc/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:.\inc/cmsis_gcc.h **** }
 192:.\inc/cmsis_gcc.h **** 
 193:.\inc/cmsis_gcc.h **** 
 194:.\inc/cmsis_gcc.h **** /**
 195:.\inc/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:.\inc/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:.\inc/cmsis_gcc.h ****   \return               Priority Mask value
 198:.\inc/cmsis_gcc.h ****  */
 199:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:.\inc/cmsis_gcc.h **** {
 201:.\inc/cmsis_gcc.h ****   uint32_t result;
 202:.\inc/cmsis_gcc.h **** 
 203:.\inc/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:.\inc/cmsis_gcc.h ****   return(result);
 205:.\inc/cmsis_gcc.h **** }
 206:.\inc/cmsis_gcc.h **** 
 207:.\inc/cmsis_gcc.h **** 
 208:.\inc/cmsis_gcc.h **** /**
 209:.\inc/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:.\inc/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:.\inc/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:.\inc/cmsis_gcc.h ****  */
 213:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:.\inc/cmsis_gcc.h **** {
 215:.\inc/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:.\inc/cmsis_gcc.h **** }
 217:.\inc/cmsis_gcc.h **** 
 218:.\inc/cmsis_gcc.h **** 
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 9


 219:.\inc/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:.\inc/cmsis_gcc.h **** 
 221:.\inc/cmsis_gcc.h **** /**
 222:.\inc/cmsis_gcc.h ****   \brief   Enable FIQ
 223:.\inc/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:.\inc/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:.\inc/cmsis_gcc.h ****  */
 226:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:.\inc/cmsis_gcc.h **** {
 228:.\inc/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:.\inc/cmsis_gcc.h **** }
 230:.\inc/cmsis_gcc.h **** 
 231:.\inc/cmsis_gcc.h **** 
 232:.\inc/cmsis_gcc.h **** /**
 233:.\inc/cmsis_gcc.h ****   \brief   Disable FIQ
 234:.\inc/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:.\inc/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:.\inc/cmsis_gcc.h ****  */
 237:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:.\inc/cmsis_gcc.h **** {
 239:.\inc/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:.\inc/cmsis_gcc.h **** }
 241:.\inc/cmsis_gcc.h **** 
 242:.\inc/cmsis_gcc.h **** 
 243:.\inc/cmsis_gcc.h **** /**
 244:.\inc/cmsis_gcc.h ****   \brief   Get Base Priority
 245:.\inc/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:.\inc/cmsis_gcc.h ****   \return               Base Priority register value
 247:.\inc/cmsis_gcc.h ****  */
 248:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:.\inc/cmsis_gcc.h **** {
 250:.\inc/cmsis_gcc.h ****   uint32_t result;
 251:.\inc/cmsis_gcc.h **** 
 252:.\inc/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:.\inc/cmsis_gcc.h ****   return(result);
 254:.\inc/cmsis_gcc.h **** }
 255:.\inc/cmsis_gcc.h **** 
 256:.\inc/cmsis_gcc.h **** 
 257:.\inc/cmsis_gcc.h **** /**
 258:.\inc/cmsis_gcc.h ****   \brief   Set Base Priority
 259:.\inc/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:.\inc/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:.\inc/cmsis_gcc.h ****  */
 262:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:.\inc/cmsis_gcc.h **** {
 264:.\inc/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:.\inc/cmsis_gcc.h **** }
 266:.\inc/cmsis_gcc.h **** 
 267:.\inc/cmsis_gcc.h **** 
 268:.\inc/cmsis_gcc.h **** /**
 269:.\inc/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:.\inc/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:.\inc/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:.\inc/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:.\inc/cmsis_gcc.h ****  */
 274:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:.\inc/cmsis_gcc.h **** {
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 10


 276:.\inc/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:.\inc/cmsis_gcc.h **** }
 278:.\inc/cmsis_gcc.h **** 
 279:.\inc/cmsis_gcc.h **** 
 280:.\inc/cmsis_gcc.h **** /**
 281:.\inc/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:.\inc/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:.\inc/cmsis_gcc.h ****   \return               Fault Mask register value
 284:.\inc/cmsis_gcc.h ****  */
 285:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:.\inc/cmsis_gcc.h **** {
 287:.\inc/cmsis_gcc.h ****   uint32_t result;
 288:.\inc/cmsis_gcc.h **** 
 289:.\inc/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:.\inc/cmsis_gcc.h ****   return(result);
 291:.\inc/cmsis_gcc.h **** }
 292:.\inc/cmsis_gcc.h **** 
 293:.\inc/cmsis_gcc.h **** 
 294:.\inc/cmsis_gcc.h **** /**
 295:.\inc/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:.\inc/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:.\inc/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:.\inc/cmsis_gcc.h ****  */
 299:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:.\inc/cmsis_gcc.h **** {
 301:.\inc/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:.\inc/cmsis_gcc.h **** }
 303:.\inc/cmsis_gcc.h **** 
 304:.\inc/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:.\inc/cmsis_gcc.h **** 
 306:.\inc/cmsis_gcc.h **** 
 307:.\inc/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:.\inc/cmsis_gcc.h **** 
 309:.\inc/cmsis_gcc.h **** /**
 310:.\inc/cmsis_gcc.h ****   \brief   Get FPSCR
 311:.\inc/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:.\inc/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:.\inc/cmsis_gcc.h ****  */
 314:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:.\inc/cmsis_gcc.h **** {
 316:.\inc/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:.\inc/cmsis_gcc.h ****   uint32_t result;
 318:.\inc/cmsis_gcc.h **** 
 319:.\inc/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:.\inc/cmsis_gcc.h ****   __ASM volatile ("");
 321:.\inc/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:.\inc/cmsis_gcc.h ****   __ASM volatile ("");
 323:.\inc/cmsis_gcc.h ****   return(result);
 324:.\inc/cmsis_gcc.h **** #else
 325:.\inc/cmsis_gcc.h ****    return(0);
 326:.\inc/cmsis_gcc.h **** #endif
 327:.\inc/cmsis_gcc.h **** }
 328:.\inc/cmsis_gcc.h **** 
 329:.\inc/cmsis_gcc.h **** 
 330:.\inc/cmsis_gcc.h **** /**
 331:.\inc/cmsis_gcc.h ****   \brief   Set FPSCR
 332:.\inc/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 11


 333:.\inc/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:.\inc/cmsis_gcc.h ****  */
 335:.\inc/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:.\inc/cmsis_gcc.h **** {
 337:.\inc/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:.\inc/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:.\inc/cmsis_gcc.h ****   __ASM volatile ("");
 340:.\inc/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:.\inc/cmsis_gcc.h ****   __ASM volatile ("");
 342:.\inc/cmsis_gcc.h **** #endif
 343:.\inc/cmsis_gcc.h **** }
 344:.\inc/cmsis_gcc.h **** 
 345:.\inc/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:.\inc/cmsis_gcc.h **** 
 347:.\inc/cmsis_gcc.h **** 
 348:.\inc/cmsis_gcc.h **** 
 349:.\inc/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:.\inc/cmsis_gcc.h **** 
 351:.\inc/cmsis_gcc.h **** 
 352:.\inc/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:.\inc/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:.\inc/cmsis_gcc.h ****   Access to dedicated instructions
 355:.\inc/cmsis_gcc.h ****   @{
 356:.\inc/cmsis_gcc.h **** */
 357:.\inc/cmsis_gcc.h **** 
 358:.\inc/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:.\inc/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:.\inc/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:.\inc/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:.\inc/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:.\inc/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:.\inc/cmsis_gcc.h **** #else
 365:.\inc/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:.\inc/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:.\inc/cmsis_gcc.h **** #endif
 368:.\inc/cmsis_gcc.h **** 
 369:.\inc/cmsis_gcc.h **** /**
 370:.\inc/cmsis_gcc.h ****   \brief   No Operation
 371:.\inc/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:.\inc/cmsis_gcc.h ****  */
 373:.\inc/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:.\inc/cmsis_gcc.h **** {
 375:.\inc/cmsis_gcc.h ****   __ASM volatile ("nop");
 193              		.loc 2 375 0
 194              		.syntax divided
 195              	@ 375 ".\inc/cmsis_gcc.h" 1
 196 0028 C046     		nop
 197              	@ 0 "" 2
 198              		.thumb
 199              		.syntax unified
 200              	.LBE11:
 201              	.LBE10:
 202              	@ .\driver\src\driver.common.c:40: 	for(i=0; i<msec; i++)
  40:.\driver\src/driver.common.c **** 		__NOP( ); 
 203              		.loc 1 40 0
 204 002a 0133     		adds	r3, r3, #1	@ i,
 205              	.LVL6:
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 12


 206 002c F9E7     		b	.L6	@
 207              	.L9:
 208 002e C046     		.align	2
 209              	.L8:
 210 0030 00000000 		.word	SystemCoreClock
 211 0034 70170000 		.word	6000
 212              		.cfi_endproc
 213              	.LFE36:
 214              		.size	VOR_Sleep, .-VOR_Sleep
 215              		.align	1
 216              		.global	VOR_GPIO_PinMux
 217              		.syntax unified
 218              		.code	16
 219              		.thumb_func
 220              		.fpu softvfp
 221              		.type	VOR_GPIO_PinMux, %function
 222              	VOR_GPIO_PinMux:
 223              	.LFB37:
  43:.\driver\src/driver.common.c **** 
  44:.\driver\src/driver.common.c **** void VOR_GPIO_PinMux(uint32_t bank, uint32_t pin, uint32_t funsel) {
 224              		.loc 1 44 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              	.LVL7:
 229 0038 10B5     		push	{r4, lr}	@
 230              	.LCFI1:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 4, -8
 233              		.cfi_offset 14, -4
 234 003a 5303     		lsls	r3, r2, #13	@ _16, funsel,
 235 003c 8900     		lsls	r1, r1, #2	@ tmp132, pin,
 236              	.LVL8:
 237 003e 084C     		ldr	r4, .L13	@ tmp133,
 238              	@ .\driver\src\driver.common.c:45: 	if(bank==0)
  45:.\driver\src/driver.common.c **** 	if(bank==0)
 239              		.loc 1 45 0
 240 0040 0028     		cmp	r0, #0	@ bank,
 241 0042 06D1     		bne	.L11	@,
 242 0044 074A     		ldr	r2, .L13+4	@ tmp134,
 243              	.LVL9:
 244 0046 8918     		adds	r1, r1, r2	@ _20, tmp132, tmp134
 245              	@ .\driver\src\driver.common.c:46: 		VOR_IOCONFIG->PORTA[pin] = (VOR_IOCONFIG->PORTA[pin] & ~((0x3)
  46:.\driver\src/driver.common.c **** 		VOR_IOCONFIG->PORTA[pin] = (VOR_IOCONFIG->PORTA[pin] & ~((0x3)<<IOCONFIG_PORTA_FUNSEL_Pos))	| ((f
 246              		.loc 1 46 0
 247 0048 0A68     		ldr	r2, [r1]	@ _1, MEM[(struct VOR_IOCONFIG_Type *)_20]
 248 004a 2240     		ands	r2, r4	@ tmp125, tmp133
 249 004c 1A43     		orrs	r2, r3	@ _4, _16
 250 004e 0A60     		str	r2, [r1]	@ _4, MEM[(struct VOR_IOCONFIG_Type *)_20]
 251              	.L10:
 252              	@ .\driver\src\driver.common.c:50: }
  47:.\driver\src/driver.common.c **** 	else
  48:.\driver\src/driver.common.c **** 		VOR_IOCONFIG->PORTB[pin] = (VOR_IOCONFIG->PORTB[pin] & ~((0x3)<<IOCONFIG_PORTB_FUNSEL_Pos))	| ((f
  49:.\driver\src/driver.common.c **** 	
  50:.\driver\src/driver.common.c **** }
 253              		.loc 1 50 0
 254              		@ sp needed	@
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 13


 255 0050 10BD     		pop	{r4, pc}
 256              	.LVL10:
 257              	.L11:
 258              	@ .\driver\src\driver.common.c:48: 		VOR_IOCONFIG->PORTB[pin] = (VOR_IOCONFIG->PORTB[pin] & ~((0x3)
  48:.\driver\src/driver.common.c **** 	
 259              		.loc 1 48 0
 260 0052 054A     		ldr	r2, .L13+8	@ tmp135,
 261              	.LVL11:
 262 0054 8918     		adds	r1, r1, r2	@ tmp128, tmp132, tmp135
 263 0056 CA6F     		ldr	r2, [r1, #124]	@ _5, MEM[(struct VOR_IOCONFIG_Type *)_3 + 128B]
 264 0058 2240     		ands	r2, r4	@ tmp129, tmp133
 265 005a 1A43     		orrs	r2, r3	@ _8, _16
 266 005c CA67     		str	r2, [r1, #124]	@ _8, MEM[(struct VOR_IOCONFIG_Type *)_3 + 128B]
 267              	@ .\driver\src\driver.common.c:50: }
 268              		.loc 1 50 0
 269 005e F7E7     		b	.L10	@
 270              	.L14:
 271              		.align	2
 272              	.L13:
 273 0060 FF9FFFFF 		.word	-24577
 274 0064 00200040 		.word	1073750016
 275 0068 04200040 		.word	1073750020
 276              		.cfi_endproc
 277              	.LFE37:
 278              		.size	VOR_GPIO_PinMux, .-VOR_GPIO_PinMux
 279              	.Letext0:
 280              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 281              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 282              		.file 5 ".\\common\\hdr/va108xx.h"
 283              		.file 6 ".\\common\\hdr/system_va108xx.h"
 284              		.section	.debug_info,"",%progbits
 285              	.Ldebug_info0:
 286 0000 18020000 		.4byte	0x218
 287 0004 0200     		.2byte	0x2
 288 0006 00000000 		.4byte	.Ldebug_abbrev0
 289 000a 04       		.byte	0x4
 290 000b 01       		.uleb128 0x1
 291 000c 31000000 		.4byte	.LASF23
 292 0010 0C       		.byte	0xc
 293 0011 AC010000 		.4byte	.LASF24
 294 0015 58010000 		.4byte	.LASF25
 295 0019 00000000 		.4byte	.Ltext0
 296 001d 6C000000 		.4byte	.Letext0
 297 0021 00000000 		.4byte	.Ldebug_line0
 298 0025 02       		.uleb128 0x2
 299 0026 04       		.byte	0x4
 300 0027 05       		.byte	0x5
 301 0028 696E7400 		.ascii	"int\000"
 302 002c 03       		.uleb128 0x3
 303 002d 04       		.byte	0x4
 304 002e 07       		.byte	0x7
 305 002f 1C010000 		.4byte	.LASF0
 306 0033 03       		.uleb128 0x3
 307 0034 08       		.byte	0x8
 308 0035 05       		.byte	0x5
 309 0036 89010000 		.4byte	.LASF1
 310 003a 03       		.uleb128 0x3
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 14


 311 003b 08       		.byte	0x8
 312 003c 04       		.byte	0x4
 313 003d F5010000 		.4byte	.LASF2
 314 0041 03       		.uleb128 0x3
 315 0042 01       		.byte	0x1
 316 0043 06       		.byte	0x6
 317 0044 01020000 		.4byte	.LASF3
 318 0048 03       		.uleb128 0x3
 319 0049 01       		.byte	0x1
 320 004a 08       		.byte	0x8
 321 004b 0E010000 		.4byte	.LASF4
 322 004f 03       		.uleb128 0x3
 323 0050 02       		.byte	0x2
 324 0051 05       		.byte	0x5
 325 0052 D3010000 		.4byte	.LASF5
 326 0056 03       		.uleb128 0x3
 327 0057 02       		.byte	0x2
 328 0058 07       		.byte	0x7
 329 0059 C7000000 		.4byte	.LASF6
 330 005d 03       		.uleb128 0x3
 331 005e 04       		.byte	0x4
 332 005f 05       		.byte	0x5
 333 0060 EC010000 		.4byte	.LASF7
 334 0064 04       		.uleb128 0x4
 335 0065 E6000000 		.4byte	.LASF10
 336 0069 03       		.byte	0x3
 337 006a 4F       		.byte	0x4f
 338 006b 6F000000 		.4byte	0x6f
 339 006f 03       		.uleb128 0x3
 340 0070 04       		.byte	0x4
 341 0071 07       		.byte	0x7
 342 0072 B5000000 		.4byte	.LASF8
 343 0076 03       		.uleb128 0x3
 344 0077 08       		.byte	0x8
 345 0078 07       		.byte	0x7
 346 0079 2F010000 		.4byte	.LASF9
 347 007d 04       		.uleb128 0x4
 348 007e E3010000 		.4byte	.LASF11
 349 0082 04       		.byte	0x4
 350 0083 30       		.byte	0x30
 351 0084 64000000 		.4byte	0x64
 352 0088 05       		.uleb128 0x5
 353 0089 7D000000 		.4byte	0x7d
 354 008d 06       		.uleb128 0x6
 355 008e 88000000 		.4byte	0x88
 356 0092 07       		.uleb128 0x7
 357 0093 97010000 		.4byte	.LASF26
 358 0097 06       		.byte	0x6
 359 0098 B2       		.byte	0xb2
 360 0099 7D000000 		.4byte	0x7d
 361 009d 01       		.byte	0x1
 362 009e 01       		.byte	0x1
 363 009f 08       		.uleb128 0x8
 364 00a0 88000000 		.4byte	0x88
 365 00a4 AF000000 		.4byte	0xaf
 366 00a8 09       		.uleb128 0x9
 367 00a9 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 15


 368 00ad 1F       		.byte	0x1f
 369 00ae 00       		.byte	0
 370 00af 05       		.uleb128 0x5
 371 00b0 9F000000 		.4byte	0x9f
 372 00b4 0A       		.uleb128 0xa
 373 00b5 0010     		.2byte	0x1000
 374 00b7 05       		.byte	0x5
 375 00b8 F2       		.byte	0xf2
 376 00b9 F9000000 		.4byte	0xf9
 377 00bd 0B       		.uleb128 0xb
 378 00be DA000000 		.4byte	.LASF12
 379 00c2 05       		.byte	0x5
 380 00c3 F3       		.byte	0xf3
 381 00c4 AF000000 		.4byte	0xaf
 382 00c8 02       		.byte	0x2
 383 00c9 23       		.byte	0x23
 384 00ca 00       		.uleb128 0
 385 00cb 0B       		.uleb128 0xb
 386 00cc E0000000 		.4byte	.LASF13
 387 00d0 05       		.byte	0x5
 388 00d1 F4       		.byte	0xf4
 389 00d2 AF000000 		.4byte	0xaf
 390 00d6 03       		.byte	0x3
 391 00d7 23       		.byte	0x23
 392 00d8 8001     		.uleb128 0x80
 393 00da 0B       		.uleb128 0xb
 394 00db 10000000 		.4byte	.LASF14
 395 00df 05       		.byte	0x5
 396 00e0 F5       		.byte	0xf5
 397 00e1 0F010000 		.4byte	0x10f
 398 00e5 03       		.byte	0x3
 399 00e6 23       		.byte	0x23
 400 00e7 8002     		.uleb128 0x100
 401 00e9 0B       		.uleb128 0xb
 402 00ea 03010000 		.4byte	.LASF15
 403 00ee 05       		.byte	0x5
 404 00ef F6       		.byte	0xf6
 405 00f0 8D000000 		.4byte	0x8d
 406 00f4 03       		.byte	0x3
 407 00f5 23       		.byte	0x23
 408 00f6 FC1F     		.uleb128 0xffc
 409 00f8 00       		.byte	0
 410 00f9 08       		.uleb128 0x8
 411 00fa 8D000000 		.4byte	0x8d
 412 00fe 0A010000 		.4byte	0x10a
 413 0102 0C       		.uleb128 0xc
 414 0103 2C000000 		.4byte	0x2c
 415 0107 BE03     		.2byte	0x3be
 416 0109 00       		.byte	0
 417 010a 06       		.uleb128 0x6
 418 010b F9000000 		.4byte	0xf9
 419 010f 05       		.uleb128 0x5
 420 0110 0A010000 		.4byte	0x10a
 421 0114 04       		.uleb128 0x4
 422 0115 F1000000 		.4byte	.LASF16
 423 0119 05       		.byte	0x5
 424 011a F7       		.byte	0xf7
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 16


 425 011b B4000000 		.4byte	0xb4
 426 011f 0D       		.uleb128 0xd
 427 0120 01       		.byte	0x1
 428 0121 21000000 		.4byte	.LASF19
 429 0125 01       		.byte	0x1
 430 0126 2C       		.byte	0x2c
 431 0127 01       		.byte	0x1
 432 0128 38000000 		.4byte	.LFB37
 433 012c 6C000000 		.4byte	.LFE37
 434 0130 00000000 		.4byte	.LLST3
 435 0134 01       		.byte	0x1
 436 0135 65010000 		.4byte	0x165
 437 0139 0E       		.uleb128 0xe
 438 013a A7010000 		.4byte	.LASF17
 439 013e 01       		.byte	0x1
 440 013f 2C       		.byte	0x2c
 441 0140 7D000000 		.4byte	0x7d
 442 0144 01       		.byte	0x1
 443 0145 50       		.byte	0x50
 444 0146 0F       		.uleb128 0xf
 445 0147 70696E00 		.ascii	"pin\000"
 446 014b 01       		.byte	0x1
 447 014c 2C       		.byte	0x2c
 448 014d 7D000000 		.4byte	0x7d
 449 0151 20000000 		.4byte	.LLST4
 450 0155 10       		.uleb128 0x10
 451 0156 1A000000 		.4byte	.LASF18
 452 015a 01       		.byte	0x1
 453 015b 2C       		.byte	0x2c
 454 015c 7D000000 		.4byte	0x7d
 455 0160 41000000 		.4byte	.LLST5
 456 0164 00       		.byte	0
 457 0165 11       		.uleb128 0x11
 458 0166 01       		.byte	0x1
 459 0167 C9010000 		.4byte	.LASF20
 460 016b 01       		.byte	0x1
 461 016c 25       		.byte	0x25
 462 016d 01       		.byte	0x1
 463 016e 10000000 		.4byte	.LFB36
 464 0172 38000000 		.4byte	.LFE36
 465 0176 7B000000 		.4byte	.LLST0
 466 017a 01       		.byte	0x1
 467 017b C7010000 		.4byte	0x1c7
 468 017f 10       		.uleb128 0x10
 469 0180 DD010000 		.4byte	.LASF21
 470 0184 01       		.byte	0x1
 471 0185 25       		.byte	0x25
 472 0186 7D000000 		.4byte	0x7d
 473 018a 9B000000 		.4byte	.LLST1
 474 018e 12       		.uleb128 0x12
 475 018f 6900     		.ascii	"i\000"
 476 0191 01       		.byte	0x1
 477 0192 27       		.byte	0x27
 478 0193 7D000000 		.4byte	0x7d
 479 0197 01       		.byte	0x1
 480 0198 53       		.byte	0x53
 481 0199 13       		.uleb128 0x13
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 17


 482 019a 09010000 		.4byte	.LASF22
 483 019e 01       		.byte	0x1
 484 019f 27       		.byte	0x27
 485 01a0 7D000000 		.4byte	0x7d
 486 01a4 C7000000 		.4byte	.LLST2
 487 01a8 14       		.uleb128 0x14
 488 01a9 F2010000 		.4byte	0x1f2
 489 01ad 10000000 		.4byte	.LBB8
 490 01b1 12000000 		.4byte	.LBE8
 491 01b5 01       		.byte	0x1
 492 01b6 27       		.byte	0x27
 493 01b7 14       		.uleb128 0x14
 494 01b8 00020000 		.4byte	0x200
 495 01bc 28000000 		.4byte	.LBB10
 496 01c0 2A000000 		.4byte	.LBE10
 497 01c4 01       		.byte	0x1
 498 01c5 29       		.byte	0x29
 499 01c6 00       		.byte	0
 500 01c7 15       		.uleb128 0x15
 501 01c8 01       		.byte	0x1
 502 01c9 00000000 		.4byte	.LASF27
 503 01cd 01       		.byte	0x1
 504 01ce 1F       		.byte	0x1f
 505 01cf 01       		.byte	0x1
 506 01d0 7D000000 		.4byte	0x7d
 507 01d4 0C000000 		.4byte	.LFB35
 508 01d8 10000000 		.4byte	.LFE35
 509 01dc 02       		.byte	0x2
 510 01dd 7D       		.byte	0x7d
 511 01de 00       		.sleb128 0
 512 01df 01       		.byte	0x1
 513 01e0 F2010000 		.4byte	0x1f2
 514 01e4 12       		.uleb128 0x12
 515 01e5 72657400 		.ascii	"ret\000"
 516 01e9 01       		.byte	0x1
 517 01ea 21       		.byte	0x21
 518 01eb 7D000000 		.4byte	0x7d
 519 01ef 01       		.byte	0x1
 520 01f0 50       		.byte	0x50
 521 01f1 00       		.byte	0
 522 01f2 16       		.uleb128 0x16
 523 01f3 01       		.byte	0x1
 524 01f4 46010000 		.4byte	.LASF28
 525 01f8 01       		.byte	0x1
 526 01f9 1A       		.byte	0x1a
 527 01fa 01       		.byte	0x1
 528 01fb 7D000000 		.4byte	0x7d
 529 01ff 01       		.byte	0x1
 530 0200 17       		.uleb128 0x17
 531 0201 29010000 		.4byte	.LASF29
 532 0205 02       		.byte	0x2
 533 0206 7501     		.2byte	0x175
 534 0208 01       		.byte	0x1
 535 0209 03       		.byte	0x3
 536 020a 18       		.uleb128 0x18
 537 020b F2010000 		.4byte	0x1f2
 538 020f 00000000 		.4byte	.LFB34
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 18


 539 0213 0C000000 		.4byte	.LFE34
 540 0217 02       		.byte	0x2
 541 0218 7D       		.byte	0x7d
 542 0219 00       		.sleb128 0
 543 021a 01       		.byte	0x1
 544 021b 00       		.byte	0
 545              		.section	.debug_abbrev,"",%progbits
 546              	.Ldebug_abbrev0:
 547 0000 01       		.uleb128 0x1
 548 0001 11       		.uleb128 0x11
 549 0002 01       		.byte	0x1
 550 0003 25       		.uleb128 0x25
 551 0004 0E       		.uleb128 0xe
 552 0005 13       		.uleb128 0x13
 553 0006 0B       		.uleb128 0xb
 554 0007 03       		.uleb128 0x3
 555 0008 0E       		.uleb128 0xe
 556 0009 1B       		.uleb128 0x1b
 557 000a 0E       		.uleb128 0xe
 558 000b 11       		.uleb128 0x11
 559 000c 01       		.uleb128 0x1
 560 000d 12       		.uleb128 0x12
 561 000e 01       		.uleb128 0x1
 562 000f 10       		.uleb128 0x10
 563 0010 06       		.uleb128 0x6
 564 0011 00       		.byte	0
 565 0012 00       		.byte	0
 566 0013 02       		.uleb128 0x2
 567 0014 24       		.uleb128 0x24
 568 0015 00       		.byte	0
 569 0016 0B       		.uleb128 0xb
 570 0017 0B       		.uleb128 0xb
 571 0018 3E       		.uleb128 0x3e
 572 0019 0B       		.uleb128 0xb
 573 001a 03       		.uleb128 0x3
 574 001b 08       		.uleb128 0x8
 575 001c 00       		.byte	0
 576 001d 00       		.byte	0
 577 001e 03       		.uleb128 0x3
 578 001f 24       		.uleb128 0x24
 579 0020 00       		.byte	0
 580 0021 0B       		.uleb128 0xb
 581 0022 0B       		.uleb128 0xb
 582 0023 3E       		.uleb128 0x3e
 583 0024 0B       		.uleb128 0xb
 584 0025 03       		.uleb128 0x3
 585 0026 0E       		.uleb128 0xe
 586 0027 00       		.byte	0
 587 0028 00       		.byte	0
 588 0029 04       		.uleb128 0x4
 589 002a 16       		.uleb128 0x16
 590 002b 00       		.byte	0
 591 002c 03       		.uleb128 0x3
 592 002d 0E       		.uleb128 0xe
 593 002e 3A       		.uleb128 0x3a
 594 002f 0B       		.uleb128 0xb
 595 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 19


 596 0031 0B       		.uleb128 0xb
 597 0032 49       		.uleb128 0x49
 598 0033 13       		.uleb128 0x13
 599 0034 00       		.byte	0
 600 0035 00       		.byte	0
 601 0036 05       		.uleb128 0x5
 602 0037 35       		.uleb128 0x35
 603 0038 00       		.byte	0
 604 0039 49       		.uleb128 0x49
 605 003a 13       		.uleb128 0x13
 606 003b 00       		.byte	0
 607 003c 00       		.byte	0
 608 003d 06       		.uleb128 0x6
 609 003e 26       		.uleb128 0x26
 610 003f 00       		.byte	0
 611 0040 49       		.uleb128 0x49
 612 0041 13       		.uleb128 0x13
 613 0042 00       		.byte	0
 614 0043 00       		.byte	0
 615 0044 07       		.uleb128 0x7
 616 0045 34       		.uleb128 0x34
 617 0046 00       		.byte	0
 618 0047 03       		.uleb128 0x3
 619 0048 0E       		.uleb128 0xe
 620 0049 3A       		.uleb128 0x3a
 621 004a 0B       		.uleb128 0xb
 622 004b 3B       		.uleb128 0x3b
 623 004c 0B       		.uleb128 0xb
 624 004d 49       		.uleb128 0x49
 625 004e 13       		.uleb128 0x13
 626 004f 3F       		.uleb128 0x3f
 627 0050 0C       		.uleb128 0xc
 628 0051 3C       		.uleb128 0x3c
 629 0052 0C       		.uleb128 0xc
 630 0053 00       		.byte	0
 631 0054 00       		.byte	0
 632 0055 08       		.uleb128 0x8
 633 0056 01       		.uleb128 0x1
 634 0057 01       		.byte	0x1
 635 0058 49       		.uleb128 0x49
 636 0059 13       		.uleb128 0x13
 637 005a 01       		.uleb128 0x1
 638 005b 13       		.uleb128 0x13
 639 005c 00       		.byte	0
 640 005d 00       		.byte	0
 641 005e 09       		.uleb128 0x9
 642 005f 21       		.uleb128 0x21
 643 0060 00       		.byte	0
 644 0061 49       		.uleb128 0x49
 645 0062 13       		.uleb128 0x13
 646 0063 2F       		.uleb128 0x2f
 647 0064 0B       		.uleb128 0xb
 648 0065 00       		.byte	0
 649 0066 00       		.byte	0
 650 0067 0A       		.uleb128 0xa
 651 0068 13       		.uleb128 0x13
 652 0069 01       		.byte	0x1
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 20


 653 006a 0B       		.uleb128 0xb
 654 006b 05       		.uleb128 0x5
 655 006c 3A       		.uleb128 0x3a
 656 006d 0B       		.uleb128 0xb
 657 006e 3B       		.uleb128 0x3b
 658 006f 0B       		.uleb128 0xb
 659 0070 01       		.uleb128 0x1
 660 0071 13       		.uleb128 0x13
 661 0072 00       		.byte	0
 662 0073 00       		.byte	0
 663 0074 0B       		.uleb128 0xb
 664 0075 0D       		.uleb128 0xd
 665 0076 00       		.byte	0
 666 0077 03       		.uleb128 0x3
 667 0078 0E       		.uleb128 0xe
 668 0079 3A       		.uleb128 0x3a
 669 007a 0B       		.uleb128 0xb
 670 007b 3B       		.uleb128 0x3b
 671 007c 0B       		.uleb128 0xb
 672 007d 49       		.uleb128 0x49
 673 007e 13       		.uleb128 0x13
 674 007f 38       		.uleb128 0x38
 675 0080 0A       		.uleb128 0xa
 676 0081 00       		.byte	0
 677 0082 00       		.byte	0
 678 0083 0C       		.uleb128 0xc
 679 0084 21       		.uleb128 0x21
 680 0085 00       		.byte	0
 681 0086 49       		.uleb128 0x49
 682 0087 13       		.uleb128 0x13
 683 0088 2F       		.uleb128 0x2f
 684 0089 05       		.uleb128 0x5
 685 008a 00       		.byte	0
 686 008b 00       		.byte	0
 687 008c 0D       		.uleb128 0xd
 688 008d 2E       		.uleb128 0x2e
 689 008e 01       		.byte	0x1
 690 008f 3F       		.uleb128 0x3f
 691 0090 0C       		.uleb128 0xc
 692 0091 03       		.uleb128 0x3
 693 0092 0E       		.uleb128 0xe
 694 0093 3A       		.uleb128 0x3a
 695 0094 0B       		.uleb128 0xb
 696 0095 3B       		.uleb128 0x3b
 697 0096 0B       		.uleb128 0xb
 698 0097 27       		.uleb128 0x27
 699 0098 0C       		.uleb128 0xc
 700 0099 11       		.uleb128 0x11
 701 009a 01       		.uleb128 0x1
 702 009b 12       		.uleb128 0x12
 703 009c 01       		.uleb128 0x1
 704 009d 40       		.uleb128 0x40
 705 009e 06       		.uleb128 0x6
 706 009f 9742     		.uleb128 0x2117
 707 00a1 0C       		.uleb128 0xc
 708 00a2 01       		.uleb128 0x1
 709 00a3 13       		.uleb128 0x13
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 21


 710 00a4 00       		.byte	0
 711 00a5 00       		.byte	0
 712 00a6 0E       		.uleb128 0xe
 713 00a7 05       		.uleb128 0x5
 714 00a8 00       		.byte	0
 715 00a9 03       		.uleb128 0x3
 716 00aa 0E       		.uleb128 0xe
 717 00ab 3A       		.uleb128 0x3a
 718 00ac 0B       		.uleb128 0xb
 719 00ad 3B       		.uleb128 0x3b
 720 00ae 0B       		.uleb128 0xb
 721 00af 49       		.uleb128 0x49
 722 00b0 13       		.uleb128 0x13
 723 00b1 02       		.uleb128 0x2
 724 00b2 0A       		.uleb128 0xa
 725 00b3 00       		.byte	0
 726 00b4 00       		.byte	0
 727 00b5 0F       		.uleb128 0xf
 728 00b6 05       		.uleb128 0x5
 729 00b7 00       		.byte	0
 730 00b8 03       		.uleb128 0x3
 731 00b9 08       		.uleb128 0x8
 732 00ba 3A       		.uleb128 0x3a
 733 00bb 0B       		.uleb128 0xb
 734 00bc 3B       		.uleb128 0x3b
 735 00bd 0B       		.uleb128 0xb
 736 00be 49       		.uleb128 0x49
 737 00bf 13       		.uleb128 0x13
 738 00c0 02       		.uleb128 0x2
 739 00c1 06       		.uleb128 0x6
 740 00c2 00       		.byte	0
 741 00c3 00       		.byte	0
 742 00c4 10       		.uleb128 0x10
 743 00c5 05       		.uleb128 0x5
 744 00c6 00       		.byte	0
 745 00c7 03       		.uleb128 0x3
 746 00c8 0E       		.uleb128 0xe
 747 00c9 3A       		.uleb128 0x3a
 748 00ca 0B       		.uleb128 0xb
 749 00cb 3B       		.uleb128 0x3b
 750 00cc 0B       		.uleb128 0xb
 751 00cd 49       		.uleb128 0x49
 752 00ce 13       		.uleb128 0x13
 753 00cf 02       		.uleb128 0x2
 754 00d0 06       		.uleb128 0x6
 755 00d1 00       		.byte	0
 756 00d2 00       		.byte	0
 757 00d3 11       		.uleb128 0x11
 758 00d4 2E       		.uleb128 0x2e
 759 00d5 01       		.byte	0x1
 760 00d6 3F       		.uleb128 0x3f
 761 00d7 0C       		.uleb128 0xc
 762 00d8 03       		.uleb128 0x3
 763 00d9 0E       		.uleb128 0xe
 764 00da 3A       		.uleb128 0x3a
 765 00db 0B       		.uleb128 0xb
 766 00dc 3B       		.uleb128 0x3b
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 22


 767 00dd 0B       		.uleb128 0xb
 768 00de 27       		.uleb128 0x27
 769 00df 0C       		.uleb128 0xc
 770 00e0 11       		.uleb128 0x11
 771 00e1 01       		.uleb128 0x1
 772 00e2 12       		.uleb128 0x12
 773 00e3 01       		.uleb128 0x1
 774 00e4 40       		.uleb128 0x40
 775 00e5 06       		.uleb128 0x6
 776 00e6 9642     		.uleb128 0x2116
 777 00e8 0C       		.uleb128 0xc
 778 00e9 01       		.uleb128 0x1
 779 00ea 13       		.uleb128 0x13
 780 00eb 00       		.byte	0
 781 00ec 00       		.byte	0
 782 00ed 12       		.uleb128 0x12
 783 00ee 34       		.uleb128 0x34
 784 00ef 00       		.byte	0
 785 00f0 03       		.uleb128 0x3
 786 00f1 08       		.uleb128 0x8
 787 00f2 3A       		.uleb128 0x3a
 788 00f3 0B       		.uleb128 0xb
 789 00f4 3B       		.uleb128 0x3b
 790 00f5 0B       		.uleb128 0xb
 791 00f6 49       		.uleb128 0x49
 792 00f7 13       		.uleb128 0x13
 793 00f8 02       		.uleb128 0x2
 794 00f9 0A       		.uleb128 0xa
 795 00fa 00       		.byte	0
 796 00fb 00       		.byte	0
 797 00fc 13       		.uleb128 0x13
 798 00fd 34       		.uleb128 0x34
 799 00fe 00       		.byte	0
 800 00ff 03       		.uleb128 0x3
 801 0100 0E       		.uleb128 0xe
 802 0101 3A       		.uleb128 0x3a
 803 0102 0B       		.uleb128 0xb
 804 0103 3B       		.uleb128 0x3b
 805 0104 0B       		.uleb128 0xb
 806 0105 49       		.uleb128 0x49
 807 0106 13       		.uleb128 0x13
 808 0107 02       		.uleb128 0x2
 809 0108 06       		.uleb128 0x6
 810 0109 00       		.byte	0
 811 010a 00       		.byte	0
 812 010b 14       		.uleb128 0x14
 813 010c 1D       		.uleb128 0x1d
 814 010d 00       		.byte	0
 815 010e 31       		.uleb128 0x31
 816 010f 13       		.uleb128 0x13
 817 0110 11       		.uleb128 0x11
 818 0111 01       		.uleb128 0x1
 819 0112 12       		.uleb128 0x12
 820 0113 01       		.uleb128 0x1
 821 0114 58       		.uleb128 0x58
 822 0115 0B       		.uleb128 0xb
 823 0116 59       		.uleb128 0x59
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 23


 824 0117 0B       		.uleb128 0xb
 825 0118 00       		.byte	0
 826 0119 00       		.byte	0
 827 011a 15       		.uleb128 0x15
 828 011b 2E       		.uleb128 0x2e
 829 011c 01       		.byte	0x1
 830 011d 3F       		.uleb128 0x3f
 831 011e 0C       		.uleb128 0xc
 832 011f 03       		.uleb128 0x3
 833 0120 0E       		.uleb128 0xe
 834 0121 3A       		.uleb128 0x3a
 835 0122 0B       		.uleb128 0xb
 836 0123 3B       		.uleb128 0x3b
 837 0124 0B       		.uleb128 0xb
 838 0125 27       		.uleb128 0x27
 839 0126 0C       		.uleb128 0xc
 840 0127 49       		.uleb128 0x49
 841 0128 13       		.uleb128 0x13
 842 0129 11       		.uleb128 0x11
 843 012a 01       		.uleb128 0x1
 844 012b 12       		.uleb128 0x12
 845 012c 01       		.uleb128 0x1
 846 012d 40       		.uleb128 0x40
 847 012e 0A       		.uleb128 0xa
 848 012f 9742     		.uleb128 0x2117
 849 0131 0C       		.uleb128 0xc
 850 0132 01       		.uleb128 0x1
 851 0133 13       		.uleb128 0x13
 852 0134 00       		.byte	0
 853 0135 00       		.byte	0
 854 0136 16       		.uleb128 0x16
 855 0137 2E       		.uleb128 0x2e
 856 0138 00       		.byte	0
 857 0139 3F       		.uleb128 0x3f
 858 013a 0C       		.uleb128 0xc
 859 013b 03       		.uleb128 0x3
 860 013c 0E       		.uleb128 0xe
 861 013d 3A       		.uleb128 0x3a
 862 013e 0B       		.uleb128 0xb
 863 013f 3B       		.uleb128 0x3b
 864 0140 0B       		.uleb128 0xb
 865 0141 27       		.uleb128 0x27
 866 0142 0C       		.uleb128 0xc
 867 0143 49       		.uleb128 0x49
 868 0144 13       		.uleb128 0x13
 869 0145 20       		.uleb128 0x20
 870 0146 0B       		.uleb128 0xb
 871 0147 00       		.byte	0
 872 0148 00       		.byte	0
 873 0149 17       		.uleb128 0x17
 874 014a 2E       		.uleb128 0x2e
 875 014b 00       		.byte	0
 876 014c 03       		.uleb128 0x3
 877 014d 0E       		.uleb128 0xe
 878 014e 3A       		.uleb128 0x3a
 879 014f 0B       		.uleb128 0xb
 880 0150 3B       		.uleb128 0x3b
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 24


 881 0151 05       		.uleb128 0x5
 882 0152 27       		.uleb128 0x27
 883 0153 0C       		.uleb128 0xc
 884 0154 20       		.uleb128 0x20
 885 0155 0B       		.uleb128 0xb
 886 0156 00       		.byte	0
 887 0157 00       		.byte	0
 888 0158 18       		.uleb128 0x18
 889 0159 2E       		.uleb128 0x2e
 890 015a 00       		.byte	0
 891 015b 31       		.uleb128 0x31
 892 015c 13       		.uleb128 0x13
 893 015d 11       		.uleb128 0x11
 894 015e 01       		.uleb128 0x1
 895 015f 12       		.uleb128 0x12
 896 0160 01       		.uleb128 0x1
 897 0161 40       		.uleb128 0x40
 898 0162 0A       		.uleb128 0xa
 899 0163 9742     		.uleb128 0x2117
 900 0165 0C       		.uleb128 0xc
 901 0166 00       		.byte	0
 902 0167 00       		.byte	0
 903 0168 00       		.byte	0
 904              		.section	.debug_loc,"",%progbits
 905              	.Ldebug_loc0:
 906              	.LLST3:
 907 0000 38000000 		.4byte	.LFB37-.Ltext0
 908 0004 3A000000 		.4byte	.LCFI1-.Ltext0
 909 0008 0200     		.2byte	0x2
 910 000a 7D       		.byte	0x7d
 911 000b 00       		.sleb128 0
 912 000c 3A000000 		.4byte	.LCFI1-.Ltext0
 913 0010 6C000000 		.4byte	.LFE37-.Ltext0
 914 0014 0200     		.2byte	0x2
 915 0016 7D       		.byte	0x7d
 916 0017 08       		.sleb128 8
 917 0018 00000000 		.4byte	0
 918 001c 00000000 		.4byte	0
 919              	.LLST4:
 920 0020 38000000 		.4byte	.LVL7-.Ltext0
 921 0024 3E000000 		.4byte	.LVL8-.Ltext0
 922 0028 0100     		.2byte	0x1
 923 002a 51       		.byte	0x51
 924 002b 3E000000 		.4byte	.LVL8-.Ltext0
 925 002f 6C000000 		.4byte	.LFE37-.Ltext0
 926 0033 0400     		.2byte	0x4
 927 0035 F3       		.byte	0xf3
 928 0036 01       		.uleb128 0x1
 929 0037 51       		.byte	0x51
 930 0038 9F       		.byte	0x9f
 931 0039 00000000 		.4byte	0
 932 003d 00000000 		.4byte	0
 933              	.LLST5:
 934 0041 38000000 		.4byte	.LVL7-.Ltext0
 935 0045 46000000 		.4byte	.LVL9-.Ltext0
 936 0049 0100     		.2byte	0x1
 937 004b 52       		.byte	0x52
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 25


 938 004c 46000000 		.4byte	.LVL9-.Ltext0
 939 0050 52000000 		.4byte	.LVL10-.Ltext0
 940 0054 0400     		.2byte	0x4
 941 0056 F3       		.byte	0xf3
 942 0057 01       		.uleb128 0x1
 943 0058 52       		.byte	0x52
 944 0059 9F       		.byte	0x9f
 945 005a 52000000 		.4byte	.LVL10-.Ltext0
 946 005e 54000000 		.4byte	.LVL11-.Ltext0
 947 0062 0100     		.2byte	0x1
 948 0064 52       		.byte	0x52
 949 0065 54000000 		.4byte	.LVL11-.Ltext0
 950 0069 6C000000 		.4byte	.LFE37-.Ltext0
 951 006d 0400     		.2byte	0x4
 952 006f F3       		.byte	0xf3
 953 0070 01       		.uleb128 0x1
 954 0071 52       		.byte	0x52
 955 0072 9F       		.byte	0x9f
 956 0073 00000000 		.4byte	0
 957 0077 00000000 		.4byte	0
 958              	.LLST0:
 959 007b 10000000 		.4byte	.LFB36-.Ltext0
 960 007f 14000000 		.4byte	.LCFI0-.Ltext0
 961 0083 0200     		.2byte	0x2
 962 0085 7D       		.byte	0x7d
 963 0086 00       		.sleb128 0
 964 0087 14000000 		.4byte	.LCFI0-.Ltext0
 965 008b 38000000 		.4byte	.LFE36-.Ltext0
 966 008f 0200     		.2byte	0x2
 967 0091 7D       		.byte	0x7d
 968 0092 08       		.sleb128 8
 969 0093 00000000 		.4byte	0
 970 0097 00000000 		.4byte	0
 971              	.LLST1:
 972 009b 10000000 		.4byte	.LVL0-.Ltext0
 973 009f 1A000000 		.4byte	.LVL1-.Ltext0
 974 00a3 0100     		.2byte	0x1
 975 00a5 50       		.byte	0x50
 976 00a6 1A000000 		.4byte	.LVL1-.Ltext0
 977 00aa 22000000 		.4byte	.LVL3-.Ltext0
 978 00ae 0100     		.2byte	0x1
 979 00b0 54       		.byte	0x54
 980 00b1 22000000 		.4byte	.LVL3-.Ltext0
 981 00b5 38000000 		.4byte	.LFE36-.Ltext0
 982 00b9 0400     		.2byte	0x4
 983 00bb F3       		.byte	0xf3
 984 00bc 01       		.uleb128 0x1
 985 00bd 50       		.byte	0x50
 986 00be 9F       		.byte	0x9f
 987 00bf 00000000 		.4byte	0
 988 00c3 00000000 		.4byte	0
 989              	.LLST2:
 990 00c7 22000000 		.4byte	.LVL3-.Ltext0
 991 00cb 26000000 		.4byte	.LVL4-.Ltext0
 992 00cf 0100     		.2byte	0x1
 993 00d1 54       		.byte	0x54
 994 00d2 26000000 		.4byte	.LVL4-.Ltext0
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 26


 995 00d6 28000000 		.4byte	.LVL5-.Ltext0
 996 00da 0700     		.2byte	0x7
 997 00dc F3       		.byte	0xf3
 998 00dd 01       		.uleb128 0x1
 999 00de 50       		.byte	0x50
 1000 00df 70       		.byte	0x70
 1001 00e0 00       		.sleb128 0
 1002 00e1 1E       		.byte	0x1e
 1003 00e2 9F       		.byte	0x9f
 1004 00e3 28000000 		.4byte	.LVL5-.Ltext0
 1005 00e7 38000000 		.4byte	.LFE36-.Ltext0
 1006 00eb 0100     		.2byte	0x1
 1007 00ed 54       		.byte	0x54
 1008 00ee 00000000 		.4byte	0
 1009 00f2 00000000 		.4byte	0
 1010              		.section	.debug_aranges,"",%progbits
 1011 0000 1C000000 		.4byte	0x1c
 1012 0004 0200     		.2byte	0x2
 1013 0006 00000000 		.4byte	.Ldebug_info0
 1014 000a 04       		.byte	0x4
 1015 000b 00       		.byte	0
 1016 000c 0000     		.2byte	0
 1017 000e 0000     		.2byte	0
 1018 0010 00000000 		.4byte	.Ltext0
 1019 0014 6C000000 		.4byte	.Letext0-.Ltext0
 1020 0018 00000000 		.4byte	0
 1021 001c 00000000 		.4byte	0
 1022              		.section	.debug_line,"",%progbits
 1023              	.Ldebug_line0:
 1024 0000 8A010000 		.section	.debug_str,"MS",%progbits,1
 1024      02004B01 
 1024      00000201 
 1024      FB0E0D00 
 1024      01010101 
 1025              	.LASF27:
 1026 0000 564F525F 		.ascii	"VOR_Get_SysTime\000"
 1026      4765745F 
 1026      53797354 
 1026      696D6500 
 1027              	.LASF14:
 1028 0010 52455345 		.ascii	"RESERVED0\000"
 1028      52564544 
 1028      3000
 1029              	.LASF18:
 1030 001a 66756E73 		.ascii	"funsel\000"
 1030      656C00
 1031              	.LASF19:
 1032 0021 564F525F 		.ascii	"VOR_GPIO_PinMux\000"
 1032      4750494F 
 1032      5F50696E 
 1032      4D757800 
 1033              	.LASF23:
 1034 0031 474E5520 		.ascii	"GNU C11 7.2.1 20170904 (release) [ARM/embedded-7-br"
 1034      43313120 
 1034      372E322E 
 1034      31203230 
 1034      31373039 
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 27


 1035 0064 616E6368 		.ascii	"anch revision 255204] -mcpu=cortex-m0 -mthumb -gdwa"
 1035      20726576 
 1035      6973696F 
 1035      6E203235 
 1035      35323034 
 1036 0097 72662D32 		.ascii	"rf-2 -Os -fomit-frame-pointer\000"
 1036      202D4F73 
 1036      202D666F 
 1036      6D69742D 
 1036      6672616D 
 1037              	.LASF8:
 1038 00b5 6C6F6E67 		.ascii	"long unsigned int\000"
 1038      20756E73 
 1038      69676E65 
 1038      6420696E 
 1038      7400
 1039              	.LASF6:
 1040 00c7 73686F72 		.ascii	"short unsigned int\000"
 1040      7420756E 
 1040      7369676E 
 1040      65642069 
 1040      6E7400
 1041              	.LASF12:
 1042 00da 504F5254 		.ascii	"PORTA\000"
 1042      4100
 1043              	.LASF13:
 1044 00e0 504F5254 		.ascii	"PORTB\000"
 1044      4200
 1045              	.LASF10:
 1046 00e6 5F5F7569 		.ascii	"__uint32_t\000"
 1046      6E743332 
 1046      5F7400
 1047              	.LASF16:
 1048 00f1 564F525F 		.ascii	"VOR_IOCONFIG_Type\000"
 1048      494F434F 
 1048      4E464947 
 1048      5F547970 
 1048      6500
 1049              	.LASF15:
 1050 0103 50455249 		.ascii	"PERID\000"
 1050      4400
 1051              	.LASF22:
 1052 0109 6D736563 		.ascii	"msec\000"
 1052      00
 1053              	.LASF4:
 1054 010e 756E7369 		.ascii	"unsigned char\000"
 1054      676E6564 
 1054      20636861 
 1054      7200
 1055              	.LASF0:
 1056 011c 756E7369 		.ascii	"unsigned int\000"
 1056      676E6564 
 1056      20696E74 
 1056      00
 1057              	.LASF29:
 1058 0129 5F5F4E4F 		.ascii	"__NOP\000"
 1058      5000
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 28


 1059              	.LASF9:
 1060 012f 6C6F6E67 		.ascii	"long long unsigned int\000"
 1060      206C6F6E 
 1060      6720756E 
 1060      7369676E 
 1060      65642069 
 1061              	.LASF28:
 1062 0146 564F525F 		.ascii	"VOR_Get_ClockFreq\000"
 1062      4765745F 
 1062      436C6F63 
 1062      6B467265 
 1062      7100
 1063              	.LASF25:
 1064 0158 433A5C56 		.ascii	"C:\\VA108xx_GCC\\Wksp_VOR_ Blink\\vorago_blink_only"
 1064      41313038 
 1064      78785F47 
 1064      43435C57 
 1064      6B73705F 
 1065 0188 00       		.ascii	"\000"
 1066              	.LASF1:
 1067 0189 6C6F6E67 		.ascii	"long long int\000"
 1067      206C6F6E 
 1067      6720696E 
 1067      7400
 1068              	.LASF26:
 1069 0197 53797374 		.ascii	"SystemCoreClock\000"
 1069      656D436F 
 1069      7265436C 
 1069      6F636B00 
 1070              	.LASF17:
 1071 01a7 62616E6B 		.ascii	"bank\000"
 1071      00
 1072              	.LASF24:
 1073 01ac 2E5C6472 		.ascii	".\\driver\\src\\driver.common.c\000"
 1073      69766572 
 1073      5C737263 
 1073      5C647269 
 1073      7665722E 
 1074              	.LASF20:
 1075 01c9 564F525F 		.ascii	"VOR_Sleep\000"
 1075      536C6565 
 1075      7000
 1076              	.LASF5:
 1077 01d3 73686F72 		.ascii	"short int\000"
 1077      7420696E 
 1077      7400
 1078              	.LASF21:
 1079 01dd 6D74696D 		.ascii	"mtime\000"
 1079      6500
 1080              	.LASF11:
 1081 01e3 75696E74 		.ascii	"uint32_t\000"
 1081      33325F74 
 1081      00
 1082              	.LASF7:
 1083 01ec 6C6F6E67 		.ascii	"long int\000"
 1083      20696E74 
 1083      00
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 29


 1084              	.LASF2:
 1085 01f5 6C6F6E67 		.ascii	"long double\000"
 1085      20646F75 
 1085      626C6500 
 1086              	.LASF3:
 1087 0201 7369676E 		.ascii	"signed char\000"
 1087      65642063 
 1087      68617200 
 1088              		.ident	"GCC: (GNU Tools for Arm Embedded Processors 7-2017-q4-major) 7.2.1 20170904 (release) [ARM
ARM GAS  C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 driver.common.c
C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s:73     .text:00000000 $t
C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s:80     .text:00000000 VOR_Get_ClockFreq
C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s:103    .text:00000008 $d
C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s:107    .text:0000000c $t
C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s:114    .text:0000000c VOR_Get_SysTime
C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s:137    .text:00000010 VOR_Sleep
C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s:210    .text:00000030 $d
C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s:215    .text:00000038 $t
C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s:222    .text:00000038 VOR_GPIO_PinMux
C:\Users\demo1\AppData\Local\Temp\ccHO6ii6.s:273    .text:00000060 $d

UNDEFINED SYMBOLS
SystemCoreClock
__aeabi_uidiv
